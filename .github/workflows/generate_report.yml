name: Generate Report

on:
  workflow_run:
    workflows: [Manual report trigger, Evaluate submission]
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-a-workflow-based-on-the-conclusion-of-another-workflow
    types:
      - completed

jobs:
  generate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      # Checks-out your repository, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: submit
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          cache: "pip" # caching pip dependencies
      - run: |
          day=$(date +"%u")
          echo "DOWEEK=$((day))" >> $GITHUB_ENV

      - name: Skipping now
        if: env.DOWEEK == 7 # sunday
        run: echo "Skipping report now. Will be generated on next scheduled run!"

      - name: Install requirements
        if: env.DOWEEK != 7
        run: |
          pip install -r requirements.txt
          pip install lxml[html_clean]

      - name: Execute notebook
        if: env.DOWEEK != 7
        run: jupyter nbconvert --to html --no-input --execute --output docs/index.html evaluation_report.ipynb

      - name: Commit & push changes
        if: env.DOWEEK != 7
        run: |
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"
          git add docs/* evaluation_report.ipynb
          git commit -m 'update evaluation report'
          git push
      - name: create PR
        if: env.DOWEEK != 7
        run: |
          PR_NUM="$(gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          /repos/$OWNER/$REPO/pulls \
          -f title='New evaluation report' \
          -f body='Please pull these new results in!' \
          -f head='submit' \
          -f base='main' --jq '.number')"
          echo $PR_NUM
          echo "PR_TO_MERGE=$(($PR_NUM))" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
      - name: merge
        if: env.DOWEEK != 7
        run: |
          gh api \
          --method PUT \
          -H "Accept: application/vnd.github+json" \
          /repos/$OWNER/$REPO/pulls/${{env.PR_TO_MERGE}}/merge \
          -f commit_title='Merge new report' \
          -f commit_message='Automatically merge pull request from report pipeline'
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
